var searchIndex = JSON.parse('{\
"egg_sketches":{"doc":"<code>egg-sketches</code> is a library adding support for program …","t":[13,13,13,13,6,4,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,12,12],"n":["Any","Contains","Node","Or","Sketch","SketchNode","borrow","borrow_mut","children","children_mut","clone","clone_into","cmp","eclass_extract_sketch","eclass_satisfies_sketch","eq","equivalent","fmt","fmt","from","from_op","get_hash","hash","into","matches","ne","partial_cmp","satisfies_sketch","to_owned","to_string","try_from","try_into","type_id","0","0","0"],"q":["egg_sketches","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","egg_sketches::SketchNode","",""],"d":["Any program of the underlying <code>Language</code>.","Programs that contain sub-programs satisfying the given …","Programs made from this <code>Language</code> node whose children …","Programs that satisfy any of these sketches.","A <code>Sketch</code> is a program pattern that is satisfied by a …","The language of <code>Sketch</code>es.","","","","","","","","Returns the best program satisfying <code>s</code> according to <code>cost_f</code> …","Is the <code>id</code> e-class of <code>egraph</code> representing at least one …","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Returns the set of e-classes of <code>egraph</code> that represent at …","","","","","","","",""],"i":[1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,2,3,4],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]],["sketchnode",4]],[[["",0],["",0]]],[[["",0],["sketchnode",4]],["ordering",4]],[[["sketch",6],["egraph",3],["id",3]],["option",4]],[[["sketch",6],["egraph",3],["id",3]],["bool",0]],[[["",0],["sketchnode",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["str",0],["vec",3,[["id",3]]]],["result",4]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]]],[[]],[[["",0],["",0]],["bool",0]],[[["",0],["sketchnode",4]],["bool",0]],[[["",0],["sketchnode",4]],["option",4,[["ordering",4]]]],[[["sketch",6],["egraph",3]],["hashset",3,[["id",3],["fxbuildhasher",6]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null],"p":[[4,"SketchNode"],[13,"Node"],[13,"Contains"],[13,"Or"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};